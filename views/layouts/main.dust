<!DOCTYPE html>
<html>
  <head>
    <title>{+title /}</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/normalize.css">
    <link rel="stylesheet" href="/styles/foundation.css">
	<!-- <link rel="stylesheet" href="/styles/gum.css"> -->
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
	<link rel="stylesheet" href="js/Leaflet.draw/dist/leaflet.draw.css" />	
    <!--STYLES END-->

    <!-- Additional Scripts -->
    <script src="js/vendor/modernizr.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js"></script>
    <script src="http://cdn.jsdelivr.net/leaflet.esri/1.0.0/esri-leaflet.js"></script>
    <script src="/js/vendor/jquery.js"></script>
	<script src="js/Leaflet.draw/src/Leaflet.draw.js"></script>

	<script src="js/Leaflet.draw/src/edit/handler/Edit.Poly.js"></script>
	<script src="js/Leaflet.draw/src/edit/handler/Edit.SimpleShape.js"></script>
	<script src="js/Leaflet.draw/src/edit/handler/Edit.Circle.js"></script>
	<script src="js/Leaflet.draw/src/edit/handler/Edit.Rectangle.js"></script>

	<script src="js/Leaflet.draw/src/draw/handler/Draw.Feature.js"></script>
	<script src="js/Leaflet.draw/src/draw/handler/Draw.Polyline.js"></script>
	<script src="js/Leaflet.draw/src/draw/handler/Draw.Polygon.js"></script>
	<script src="js/Leaflet.draw/src/draw/handler/Draw.SimpleShape.js"></script>
	<script src="js/Leaflet.draw/src/draw/handler/Draw.Rectangle.js"></script>
	<script src="js/Leaflet.draw/src/draw/handler/Draw.Circle.js"></script>
	<script src="js/Leaflet.draw/src/draw/handler/Draw.Marker.js"></script>

	<script src="js/Leaflet.draw/src/ext/LatLngUtil.js"></script>
	<script src="js/Leaflet.draw/src/ext/GeometryUtil.js"></script>
	<script src="js/Leaflet.draw/src/ext/LineUtil.Intersect.js"></script>
	<script src="js/Leaflet.draw/src/ext/Polyline.Intersect.js"></script>
	<script src="js/Leaflet.draw/src/ext/Polygon.Intersect.js"></script>

	<script src="js/Leaflet.draw/src/Control.Draw.js"></script>
	<script src="js/Leaflet.draw/src/Tooltip.js"></script>
	<script src="js/Leaflet.draw/src/Toolbar.js"></script>

	<script src="js/Leaflet.draw/src/draw/DrawToolbar.js"></script>
	<script src="js/Leaflet.draw/src/edit/EditToolbar.js"></script>
	<script src="js/Leaflet.draw/src/edit/handler/EditToolbar.Edit.js"></script>
	<script src="js/Leaflet.draw/src/edit/handler/EditToolbar.Delete.js"></script>

    <!-- End of Additional Scripts -->

  </head>

  <body>

	<nav class="top-bar" data-topbar role="navigation">
	  <ul class="title-area">
		<li class="name">
		  <h1><a href="#"><span class="teal">Carnforth</span>&nbsp; > &nbsp; Planning Application (13/01297/OUT)</a></h1>
		</li>
		 <!-- Remove the class "menu-icon" to get rid of menu icon. Take out "Menu" to just have icon alone -->
		<li class="toggle-topbar menu-icon"><a href="#"><span>Menu</span></a></li>
	  </ul>

	  <section class="top-bar-section">
		<!-- Right Nav Section -->
		<ul class="right">
			<li><a href="/hybrid"><i class="fa fa-list"></i>&nbsp; Details</a></li>
			<li class="active"><a href="/"><i class="fa fa-map-marker"></i>&nbsp; Map</a></li>
			<li><a href="/"><i class="fa fa-comments-o"></i>&nbsp; Discussion</a></li>
			<li><a href="#"><i class="fa fa-line-chart"></i>&nbsp; Analytics</a></li>
			<li><a href="#" class="dim">Log Out</a></li>
		</ul>

		<!-- Left Nav Section -->
		<ul class="left">
		
			<li class="has-form">
			  <a href="http://foundation.zurb.com/docs" class="button">+ Add New</a>
			</li>
			
			<li class="has-form">
				 <a href="http://foundation.zurb.com/docs" class="button otherbutton"><i class="fa fa-pencil"></i></a>
			</li>
		
		  <li><a id="search-box" href="#" onClick="showSearchBox();"><i class="fa fa-search"></i>&nbsp; Search</a></li>
		</ul>
	  </section>
	</nav>

    {+body /}



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->

    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/foundation.min.js"></script>
    <script src="/js/vendor/fastclick.js"></script>
	<script src="/js/jquery.placechangers.js"></script>
    <!--SCRIPTS END-->

    <!-- Activate Foundation -->
    <script> $(document).foundation(); </script>
    <!-- End Activation -->
  </body>
</html>
